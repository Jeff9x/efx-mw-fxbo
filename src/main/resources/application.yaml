spring:
  profiles:
    active: default
springdoc:
  api-docs:
    path: /api-docs
server:
  port: 8081
  address: 0.0.0.0

security:
  require-ssl: false

camel:
  component:
    http:
      connect-timeout: "1000"
      connection-request-timeout: "10000"
      connections-per-route: "300"
      max-total-connections: "2600"
  rest:
    component: servlet
    port: ${server.port:8081}
  servlet:
    mapping:
      context-path: ${API_PATH_VERSION:/mw-fxbo/api/v1/*}
      enabled: true
      servlet-name: CamelServlet
  springboot:
    jmx-enabled: true
    main-run-controller: true
    name: empirefx-fxbo

swagger:
  api:
    enableCors: true
    path: /api
  api-docs:
    path: /api-docs
    version: 1.0.0

logging:
  group:
    tomcat: org.apache.catalina, org.apache.coyote, org.apache.tomcat
  level:
    root: ${LOGGING_LEVEL:info}
    org.springframework.web: ${LOGGING_LEVEL:info}
    org.apache.camel: ${LOGGING_LEVEL:info}
    tomcat: ${LOGGING_LEVEL:info}
    com.empirefx: ${LOGGING_LEVEL:info}
  pattern:
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){yellow} %clr(%5p) %clr(${PID}){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx"

management:
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: info, health, metrics
  security:
    enabled: false
  server:
    port: 8081

efx-values:
  vasco:
    cred: efx-dev-cred


adaptive:
  method: GET
  camelHttpMethod: CamelHttpMethod
  authorization: Authorization
  token: Bearer aeb88c9042d814eb7aaf4ca4d35568339a12945346f3a68509f7b28621b7b61efb13fa4163004a3e04365c39e9f589221987767d607dbd8a46b135a8
  POIConfig: 4
  POAConfig: 5
  emailConfig : 1
  resetPasswordConfig: main

gcp:
  projectId: prj-empirefx-eng-stg-be

aws-config:
  accessKey: DO00EEN2Q3RHNXRJ4FBZ
  secretKey: ybgFqOf09Fhz0+OagPSKS/nZIAHgMMp8fJXb+uQgvAU
  region: lon1
  service: s3
  signingAlgorithm: AWS4-HMAC-SHA256

atomic:
  host: ${ATOMIC_HOST:portal.empirefx.com}
  hostMock: ${ATOMIC_HOST:portal.empirefx.com}
  method: GET
  method2: POST
  path: ${ATOMIC_PATH:/rest/dict/countries}
  pathAccountTypes: ${ATOMIC_PATH:/rest/dict/account-type}
  pathAccount: ${ATOMIC_PATH:/rest/accounts/new}
  pathTradingAccounts: ${ATOMIC_PATH:/rest/accounts}
  pathUserAccount: ${ATOMIC_PATH:/rest/users}
  pathDocuments: ${ATOMIC_PATH:/rest/documents/update}
  pathFxRates: ${ATOMIC_PATH:/rest/rates/get-live}
  timeout: ${ATOMIC_TIMEOUT:10000}
  protocol: ${ATOMIC_PROTOCOL:https}
  uri-params: ?version=1.0.0&_locale=en&?bridgeEndpoint=true&httpMethod=${atomic.method}&throwExceptionOnFailure=false&responseTimeout=${atomic.timeout}
  uri-paramsAccount: ?version=1.0.0&_locale=en&?bridgeEndpoint=true&httpMethod=${atomic.method2}&throwExceptionOnFailure=false&responseTimeout=${atomic.timeout}
  uri: ${atomic.protocol}://${atomic.host}${atomic.path}${atomic.uri-params}
  uriAccountTypes: ${atomic.protocol}://${atomic.host}${atomic.pathAccountTypes}${atomic.uri-params}
  uriAccount: ${atomic.protocol}://${atomic.host}${atomic.pathAccount}${atomic.uri-paramsAccount}
  uriTradingAccounts: ${atomic.protocol}://${atomic.host}${atomic.pathTradingAccounts}${atomic.uri-paramsAccount}
  uriFxRates: ${atomic.protocol}://${atomic.hostMock}${atomic.pathFxRates}${atomic.uri-paramsAccount}
  pathPlatformServers: ${ATOMIC_PATH:/rest/servers}
  uriUserAccount: ${atomic.protocol}://${atomic.host}${atomic.pathUserAccount}
  uriUpdateDocuments: ${atomic.protocol}://${atomic.host}${atomic.pathDocuments}${atomic.uri-paramsAccount}
  uriPlatformServers: ${atomic.protocol}://${atomic.host}${atomic.pathPlatformServers}${atomic.uri-params}
  uriPlatformServer: ${atomic.protocol}://${atomic.host}${atomic.pathPlatformServers}

atomic1:
  host: ${ATOMIC_HOST:portal.empirefx.com}
  method: POST
  methodPatch: PATCH
  methodPut: PUT
  pathUser: ${ATOMIC_PATH:/rest/users/new}
  pathUpdateUser: ${ATOMIC_PATH:/rest/users/update}
  path: ${ATOMIC_PATH:/rest/accounts/new}
  pathPOI: ${ATOMIC_PATH:/rest/documents}
  pathDeposits: ${ATOMIC_PATH:/rest/transactions/deposits/new}
  pathWithdrawals: ${ATOMIC_PATH:/rest/transactions/withdrawals/new}
  pathApprove: ${ATOMIC_PATH:/rest/transactions/}
  pathFetchTransactions: ${ATOMIC_PATH:/rest/transactions}
  pathDecline: ${ATOMIC_PATH:/rest/transactions/decline}
  pathAccountBalance: ${ATOMIC_PATH:/rest/accounts/check-balance}
  pathSendEmail: ${ATOMIC_PATH:/rest/user/send-email}
  pathResetPassword: ${ATOMIC_PATH:/rest/accounts/reset-password/}
  pathInternalFundsTransfer: ${ATOMIC_PATH:/rest/transfer}
  pathChangeLeverage: ${ATOMIC_PATH:/rest/accounts/}
  timeout: ${ATOMIC_TIMEOUT:10000}
  protocol: ${ATOMIC_PROTOCOL:https}
  uri-params: ?version=1.0.0&_locale=en&?bridgeEndpoint=true&httpMethod=${atomic1.method}&throwExceptionOnFailure=false&responseTimeout=${atomic1.timeout}
  uri-paramsUser: /new?version=1.0.0&_locale=en&?bridgeEndpoint=true&httpMethod=${atomic1.method}&throwExceptionOnFailure=false&responseTimeout=${atomic1.timeout}
  uri-paramsApproveTransaction: ?version=1.0.0&_locale=en&?bridgeEndpoint=true&httpMethod=${atomic1.methodPatch}&throwExceptionOnFailure=false&responseTimeout=${atomic1.timeout}
  uri-paramsDeclineTransaction: ?version=1.0.0&_locale=en&?bridgeEndpoint=true&httpMethod=${atomic1.methodPatch}&throwExceptionOnFailure=false&responseTimeout=${atomic1.timeout}
  uri-paramsResetPassword: ?version=1.0.0&_locale=en&?bridgeEndpoint=true&httpMethod=${atomic1.methodPut}&throwExceptionOnFailure=false&responseTimeout=${atomic1.timeout}
  uri-internalFundsTransfer: /new?version=1.0.0&_locale=en&?bridgeEndpoint=true&httpMethod=${atomic1.method}&throwExceptionOnFailure=false&responseTimeout=${atomic1.timeout}
  uri: ${atomic1.protocol}://${atomic1.host}${atomic1.path}${atomic1.uri-params}
  uriPOI: ${atomic1.protocol}://${atomic1.host}${atomic1.pathPOI}${atomic1.uri-paramsUser}
  uriUser: ${atomic1.protocol}://${atomic1.host}${atomic1.pathUser}${atomic1.uri-params}
  uriUpdateUser: ${atomic1.protocol}://${atomic1.host}${atomic1.pathUpdateUser}${atomic1.uri-params}
  uriDeposit: ${atomic1.protocol}://${atomic1.host}${atomic1.pathDeposits}${atomic1.uri-params}
  uriWithdrawal: ${atomic1.protocol}://${atomic1.host}${atomic1.pathWithdrawals}${atomic1.uri-params}
  uriApproveTransaction: ${atomic1.protocol}://${atomic1.host}${atomic1.pathApprove}
  uriFetchTransactions: ${atomic1.protocol}://${atomic1.host}${atomic1.pathFetchTransactions}${atomic1.uri-params}
  uriDeclineTransaction: ${atomic1.protocol}://${atomic1.host}${atomic1.pathDecline}${atomic1.uri-paramsDeclineTransaction}
  uriAccountBalance: ${atomic1.protocol}://${atomic1.host}${atomic1.pathAccountBalance}${atomic1.uri-params}
  urisendEmail: ${atomic1.protocol}://${atomic1.host}${atomic1.pathSendEmail}${atomic1.uri-params}
  uriResetPassword: ${atomic1.protocol}://${atomic1.host}${atomic1.pathResetPassword}
  uriInternalFundsTransfer: ${atomic1.protocol}://${atomic1.host}${atomic1.pathInternalFundsTransfer}${atomic1.uri-internalFundsTransfer}
  uriChangeLeverage: ${atomic1.protocol}://${atomic1.host}${atomic1.pathChangeLeverage}







