spring:
  profiles:
    active: default
springdoc:
  api-docs:
    path: /api-docs
server:
  port: 8082
  address: 0.0.0.0
#  ssl:
#    key-store-type: PKCS12
#    key-store: ${SERVERSTORE_PATH:classpath:empirefx-mw-keystore.jks}
#    key-store-password: ${SERVERSTORE_PASSWORD:empirefx-mw-keystore12}
#    key-alias: empirefx-mw-keystore
security:
  require-ssl: false

camel:
  component:
    http:
      connect-timeout: "1000"
      connection-request-timeout: "10000"
      connections-per-route: "300"
      max-total-connections: "2600"
  rest:
    component: servlet
    port: ${server.port:8082}
  servlet:
    mapping:
      context-path: ${API_PATH_VERSION:/api/v1/*}
      enabled: true
      servlet-name: CamelServlet
  springboot:
    jmx-enabled: true
    main-run-controller: true
    name: empirefx-fxbo

swagger:
  api:
    enableCors: true
    path: /api
  api-docs:
    path: /api-docs
    version: 1.0.0

logging:
  group:
    tomcat: org.apache.catalina, org.apache.coyote, org.apache.tomcat
  level:
    root: ${LOGGING_LEVEL:info}
    org.springframework.web: ${LOGGING_LEVEL:info}
    org.apache.camel: ${LOGGING_LEVEL:info}
    tomcat: ${LOGGING_LEVEL:info}
    com.empirefx: ${LOGGING_LEVEL:info}
  pattern:
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){yellow} %clr(%5p) %clr(${PID}){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx"

management:
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: info, health, metrics
  security:
    enabled: false
  server:
    port: 8082
#    address: 0.0.0.0

#  rabbitmq:
#    host: localhost
#    port: 5672
#    username: guest
#    password: guest
#    virtual-host: /
efx-values:
  vasco:
    cred: efx-dev-cred
#  header-values:
#    channelCode[0]: 101
#    channelCode[1]: 102
#    serviceCode: 1014
#    serviceName: GETFXBOCountries
#    channelName: efx
#    routeCode: 103
#    routeName: empirefx
#    serviceMode: sync
#    minorServiceVersion: 1.0

adaptive:
#  host: ${ATOMIC_HOST:demo.fxbackoffice.com}
  method: GET
  camelHttpMethod: CamelHttpMethod
  authorization: Authorization
  token: Bearer 8700c43e5ca0a3f3393b09677ef4e07b2c4e97a82e859b5e278e0a3dbbd86cfbb52f478a6d756079a8476fdb476e1a53cc658b9eb147345b4a39c807
#  path: ${ATOMIC_PATH:/rest/dict/countries}
#  timeout: ${ATOMIC_TIMEOUT:3000}
#  protocol: ${ATOMIC_PROTOCOL:https}
#  uri-params: ?version=1.0.0&_locale=en&?bridgeEndpoint=true&httpMethod=${atomic.method}&throwExceptionOnFailure=false&responseTimeout=${atomic.timeout}
#  uri: ${atomic.protocol}://${atomic.host}${atomic.path}${atomic.uri-params}

atomic:
  host: ${ATOMIC_HOST:demo.fxbackoffice.com}
  hostMock: ${ATOMIC_HOST:dbgt24d365.proxy.beeceptor.com}
  method: GET
  method2: POST
  path: ${ATOMIC_PATH:/rest/dict/countries}
  pathAccount: ${ATOMIC_PATH:/rest/accounts/new}
  pathTradingAccounts: ${ATOMIC_PATH:/rest/accounts}
  pathFxRates: ${ATOMIC_PATH:/fxrate}
  timeout: ${ATOMIC_TIMEOUT:3000}
  protocol: ${ATOMIC_PROTOCOL:https}
  uri-params: ?version=1.0.0&_locale=en&?bridgeEndpoint=true&httpMethod=${atomic.method}&throwExceptionOnFailure=false&responseTimeout=${atomic.timeout}
  uri-paramsAccount: ?version=1.0.0&_locale=en&?bridgeEndpoint=true&httpMethod=${atomic.method2}&throwExceptionOnFailure=false&responseTimeout=${atomic.timeout}
  uri: ${atomic.protocol}://${atomic.host}${atomic.path}${atomic.uri-params}
  uriAccount: ${atomic.protocol}://${atomic.host}${atomic.pathAccount}${atomic.uri-paramsAccount}
  uriTradingAccounts: ${atomic.protocol}://${atomic.host}${atomic.pathTradingAccounts}${atomic.uri-paramsAccount}
  uriFxRates: ${atomic.protocol}://${atomic.hostMock}${atomic.pathFxRates}${atomic.uri-paramsAccount}

atomic1:
  host: ${ATOMIC_HOST:demo.fxbackoffice.com}
  method: POST
  pathUser: ${ATOMIC_PATH:/rest/users/new}
  pathUpdateUser: ${ATOMIC_PATH:/rest/users/update}
  path: ${ATOMIC_PATH:/rest/accounts/new}
  pathPOI: ${ATOMIC_PATH:/rest/documents}
  timeout: ${ATOMIC_TIMEOUT:3000}
  protocol: ${ATOMIC_PROTOCOL:https}
  uri-params: ?version=1.0.0&_locale=en&?bridgeEndpoint=true&httpMethod=${atomic1.method}&throwExceptionOnFailure=false&responseTimeout=${atomic1.timeout}
  uri-paramsUser: /new?version=1.0.0&_locale=en&?bridgeEndpoint=true&httpMethod=${atomic1.method}&throwExceptionOnFailure=false&responseTimeout=${atomic1.timeout}
  uri: ${atomic1.protocol}://${atomic1.host}${atomic1.path}${atomic1.uri-params}
  uriPOI: ${atomic1.protocol}://${atomic1.host}${atomic1.pathPOI}${atomic1.uri-paramsUser}
  uriUser: ${atomic1.protocol}://${atomic1.host}${atomic1.pathUser}${atomic1.uri-params}
  uriUpdateUser: ${atomic1.protocol}://${atomic1.host}${atomic1.pathUpdateUser}${atomic1.uri-params}

ehf:
  host: ${EHF_HOST:localhost}
  method: POST
  path: /api/ehf/fetchKeys
  port: ${EHF_PORT:8081}
  protocol: ${EHF_PROTOCOL:http}
  uri: ${ehf.protocol}://${ehf.host}:${ehf.port}${ehf.path}${ehf.uri-params}
  uri-params: ?bridgeEndpoint=true&httpMethod=${ehf.method}&throwExceptionOnFailure=true


vault-connector:
  host: ${VAULT_HOST:localhost}
  method: GET
  path: /api/credentials/
  port: ${VAULT_PORT:8083}
  protocol: ${VAULT_PROTOCOL:http}
  uri: ${vault-connector.protocol}://${vault-connector.host}:${vault-connector.port}${vault-connector.path}
  uri-params: ?bridgeEndpoint=true&httpMethod=${vault-connector.method}&throwExceptionOnFailure=false
#  use-management-port: true






