name: efx-mw-fxbo-dev

on:
  pull_request:
    branches: [main]
    types: [closed]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Build with Maven
      run: mvn clean install

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
             
    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.efx-mw-fxbo-dev-buildx-cache
        key: ${{ runner.os }}-single-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-single-buildx
          
    - name: Pull secrets
      run: |
          echo ${{ secrets.DIGITALOCEAN_REGISTRY_USERNAME }}
          echo ${{ secrets.DIGITALOCEAN_REGISTRY_PASSWORD }}
          
    - name: Log in to DigitalOcean Container Registry
      uses: docker/login-action@v3
      with:
        registry: registry.digitalocean.com
        username: ${{ secrets.DIGITALOCEAN_REGISTRY_USERNAME }}
        password: ${{ secrets.DIGITALOCEAN_REGISTRY_PASSWORD }}

    - name: Build and push Docker image
      env:
          DOCKER_REGISTRY: registry.digitalocean.com
          DOCKER_REPOSITORY: efx-registry
          IMAGE_NAME: efx-mw-fxbo-dev
      run: |
          docker buildx build \
            --push \
            --tag ${DOCKER_REGISTRY}/${DOCKER_REPOSITORY}/${IMAGE_NAME}:${{ github.sha }} \
            --tag ${DOCKER_REGISTRY}/${DOCKER_REPOSITORY}/${IMAGE_NAME}:latest \
            .
  deploy:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Save DigitalOcean kubeconfig
        run: |
          doctl kubernetes cluster kubeconfig save efx-be

      - name: Patch deployment
        run: |
            kubectl patch deployment efx-mw-fxbo -n backend-services -p '{"spec":{"template":{"metadata":{"annotations":{"kubectl.kubernetes.io/restartedAt":"'$(date +%s)'"}}}}}'
  
      - name: Scale down deployment
        run: |
            kubectl scale deployment efx-mw-fxbo --replicas=0 -n backend-services
            kubectl wait --for=delete pod -l app=efx-mw-fxbo -n backend-services --timeout=120s
  
      - name: Update Kubernetes deployment
        run: |
                kubectl set image deployment/efx-mw-fxbo efx-mw-fxbo=registry.digitalocean.com/efx-registry/efx-mw-fxbo-dev:latest -n backend-services

      - name: Create and Apply Configs
        run: |
              kubectl create configmap efx-mw-fxbo-config \
                --from-file=src/main/resources/ \
                -n backend-services \
                -o yaml \
                --dry-run=client | kubectl apply -f -
    
      - name: Verify ConfigMap
        run: |
              kubectl get configmap efx-mw-fxbo-config -n backend-services -o yaml

      - name: Update Kubernetes deployment
        run: |
            kubectl set image deployment/efx-mw-fxbo efx-mw-fxbo=registry.digitalocean.com/efx-registry/efx-mw-fxbo-dev:latest -n backend-services

      - name: Scale up deployment
        run: |
            kubectl scale deployment efx-mw-fxbo --replicas=1 -n backend-services
            kubectl rollout status deployment/efx-mw-fxbo -n backend-services --timeout=300s
  
      - name: Check deployment status
        run: |
            kubectl get pods -n backend-services -l app=efx-mw-fxbo
